name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REPOSITORY_NAME: yataco01
  IMAGE_NAME: Scan_trivy

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:

    - uses: actions/checkout@v4.1.1

    - name: Calculate variables
      run: |
        echo "DATE=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV  
        echo "COMMIT_HASH=${GITHUB_SHA::7}" >> $GITHUB_ENV
   
    - name: Run Container lint
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: src/main/docker/Dockerfile.native-micro
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const output = `
          #### Hadolint: \`${{ steps.hadolint.outcome }}\`
          \`\`\`
          ${process.env.HADOLINT_RESULTS}
          \`\`\`
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3.0.0
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.3.0

    - name: Get last commit
      run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Docker login
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker olgin -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

    - name: Build an image from Dockerfile
      run: |
          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .

    - name: Process Environment variables
      run: |
        echo "" >> ..DATA..
      shell: bash

    - name: Archive info artifacts
      uses: actions/upload-artifact@v4.3.1
      with:
        name: IMAGE_NAME-${{env.IMAGE_NAME}}
        path: |
          ..DATA..

    - name: Archive info artifacts
      uses: actions/upload-artifact@v4.3.1
      with:
        name: IMAGE_TAG-${{env.DATE}}-${{ env.IMAGE_TAG }}
        path: |
          ..DATA..
          
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
